CC=avr-gcc
AS=$(CC)
LD=$(CC)

PROGNAME=atmega8l_openlightgun_8MHz
OBJDIR=objs-$(PROGNAME)
CPU=atmega8
CFLAGS=-Wall -mmcu=$(CPU) -DF_CPU=8000000L -Os -DWITH_EEPROM
LDFLAGS=-mmcu=$(CPU) -Wl,-Map=$(PROGNAME).map
HEXFILE=$(PROGNAME).hex
AVRDUDE=avrdude -p m8 -P $(avrisp_comport) -c avrisp

# RSTDISBL  DWEN  SPIEN   WDTON  EESAVE  BOOTSZ1    BOOOTSZ2  BOOTRST
#    1        1      0      1      1         0          0        1
HFUSE=0xd9
#
# BODLEVEL   BODEN   SUT1  SUT0  CKSEL3  CKSEL2  CKSEL1  CKSEL0
#    1        1       1     0      0      1       0       0
#
# 8mhz internal RC oscillator (Ok for NES/SNES only mode)
LFUSE=0xC4

OBJS=$(addprefix $(OBJDIR)/, main.o wiimote.o gun.o eeprom.o classic.o)

all: $(HEXFILE)

clean:
	rm -f $(PROGNAME).elf $(PROGNAME).hex $(PROGNAME).map $(OBJS)

$(OBJDIR)/%.o: %.S
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: %.c %.h
	$(CC) $(CFLAGS) -c $< -o $@

$(PROGNAME).elf: $(OBJS)
	$(LD) $(OBJS) $(LDFLAGS) -o $(PROGNAME).elf

$(PROGNAME).hex: $(PROGNAME).elf
	avr-objcopy -j .data -j .text -O ihex $(PROGNAME).elf $(PROGNAME).hex
	avr-size $(PROGNAME).elf

fuse:
	#$(AVRDUDE) -e -Uhfuse:w:$(HFUSE):m -Ulfuse:w:$(LFUSE):m -B 20.0 -v
	$(AVRDUDE) -e -Uhfuse:w:$(HFUSE):m -Ulfuse:w:$(LFUSE):m -b 19200 -v

flash: $(HEXFILE)
	#$(AVRDUDE) -Uflash:w:$(HEXFILE) -B 1.0 -F
	$(AVRDUDE) -Uflash:w:$(HEXFILE) -b 19200

chip_erase:
	$(AVRDUDE) -e -b 19200 -F

reset:
	$(AVRDUDE) -b 19200 -F
	
